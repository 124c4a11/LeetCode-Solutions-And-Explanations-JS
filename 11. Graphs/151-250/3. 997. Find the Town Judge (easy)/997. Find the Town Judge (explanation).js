/**
 * @param {number} n
 * @param {number[][]} trust
 * @return {number}
 * 
 * findJudge принимает количество
 * людей n и массив  доверительных
 * отношений trust.
 * 
 * Возвращает индекс человека,
 * который является "судьей города",
 * или -1,если такого нет.
 * 
 * n — количество людей
 *     (пронумерованных от 1 до n),
 * trust — массив пар [src, dst],
 *         где src доверяет dst
 * 
 * Пример вызова:
 * findJudge(3, [[1, 3], [2, 3]])
 * вернёт 3.
 */
function findJudge(n, trust) {

  // Создаём массив delta длиной n+1,
  // инициализированный нулями.
  //
  // Используем длину массива n+1, так как
  // номера людей заданы в диапазоне 1…n,
  // и мы игнорируем ячейку delta[0].
  //
  // Используем индексы от 1 до n, чтобы не
  // смещать индексы на −1 при каждом
  // обращении
  //
  // delta[i] будет отражать
  // "баланс доверия"  человека i:
  // +1 за каждого, кто доверяет ему;
  // -1 за каждого, кому он доверяет.
  //
  // Пример: 
  // для n = 3 → delta = [0, 0, 0, 0]
  const delta = new Int32Array(n + 1);

  // Обходим все пары доверия из массива
  // trust,  распаковывая пару [src, dst]
  // где src доверяет dst
  for (const [src, dst] of trust) {

    // src доверяет dst, значит у src
    // уменьшаем баланс на 1.
    delta[src]--;

    // dst получает доверие от src,
    // значит у dst увеличиваем баланс
    // на 1.
    delta[dst]++;

    // Пример для findJudge(3, [[1,3], [2,3]]):
    // Шаг 0: delta = [0, 0, 0, 0]
    //        (индекс 0 не используется)
    // Шаг 1: ([1,3]): delta = [0, -1, 0, 1]
    // Шаг 2: ([2,3]): delta = [0, -1, -1, 2]
  }

  // Теперь ищем "судью" — того, кому доверяют
  // все остальные (входящие = n−1) и кто никому
  // не доверяет (исходящие = 0)
  //
  // В delta у такого человека будет значение
  // ровно n−1
  //
  // n-1 означает все остальные люди за
  // исключением самого судьи.
  //
  // Начитнаем обход с i=1, так как i=0 не
  // используется
  for (let i = 1; i <= n; i++) {

    // Условие судьи:
    // Если для i delta[i] === n − 1, значит:
    // все n-1 человек доверились текущему
    // человеку, а текущий человек никому
    // не доверяет → не было вычитаний в delta
    //
    // Пример:
    // i = 1: delta[1] === 2? нет (delta[1] === -1)
    // i = 2: delta[2] === 2? нет (delta[2] === -1)
    // i = 3: delta[3] === 2? да → возвращаем 3
    //                             как номер судьи
    if (delta[i] === n - 1) return i;
  }

  // Если не нашли ни одного кандидата
  // с delta = n − 1,
  // возвращаем -1 - судья отсутствует
  return -1;
}
